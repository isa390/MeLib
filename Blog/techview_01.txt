<br>2022-05-05 14:12:18:建立基于某种开发的意识，帮助更多的生态链的代码的生产和质量的保证。<br>2022-05-05 13:59:19:可以将某个项目玩熟，就是读其commit，来建立整个项目的一个思考和熟悉，以后的项目，可以直接基于这样的项目来完成这样的开发。这是可以的，在这里可以积累灵感，思考问题，得到解答。<br>2022-04-13 12:30:34:在某种特定的意义上来说，掌握Android的开发，熟悉整个的操作的流程和过程，其实和种地是同一个道理，该掌握的就必须掌握，否则，秋天就一定没有收成，必然饿死，这是同样的道理，还要应该研究如何高产。<br>2022-04-13 10:22:18:所谓的网络，也是一个输入输出设备，用来传输数据而已<br>2022-04-13 10:21:03:对于一个由硬件和软件组成的世界，硬件的一切东西都是作为一个输入输出设备，因此，在计算机的领域里面，一切都是软件！一切描述都是对于软件的描述<br>2022-03-29 18:22:02:对于可回收对象的描述，对象回收，意味着数据和状态的灭亡，如果回收了一个对象，比方说一个活动的消除，那就可以在需要的时候进行重建，但是由于被持有，为了保证回来的时候数据还存在且能够处理，那就是说，哪些数据是可以在不用的时候被清除掉，是要加入到编程的考虑中的，那就是说，自己要去考虑，在创建一个或者引用一个对象的时候，去考虑清楚，数据我要用多久，什么时候清除掉，除了不可回收的对象，可以说一切都是可以清除的，所以调用的时候一定要做好处理…<br>2022-03-29 17:18:04:从视图的角度来说，我们要组合成为一个新的单元，就要对我们的基本视图单元进行定义，由什么元素组成，元素之间如何堆积起来，然后是如何保证，该项堆积都是可用的，每一个子项如何分布，在显示之前，进行一定的预处理，边角圆化处理，fragment定性的角度来说，就是为了动态换视图来的，activity是为了给视图交互提供一个容器，service,是为了区分前台而设计的一个后台服务，contentprovider是为了建立数据中心，broadcast是为了实现硬件中断等效果，每一个对于系统来说，都是一个独立的任务，有自己的启动机制，对于一个应用来说，也是有自己的数据操作区域的数据的调整，任务的开始结束<br>2022-03-29 17:03:35:从定性的角度来说，我们需要拿到我们想要的数据，并解决拿到数据的过程中出现的种种问题，以及拿不到数据该怎么办，拿到了数据之后，再对数据进行必要的处理，输出，单个数据怎么展示